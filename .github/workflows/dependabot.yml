name: Vakgroep Software Ontwikkeling Dependabot

on:
  workflow_call:
    inputs:
      check_diff:
        description: 'Check major upgrades. Requires the Makefile target "diff"'
        type: boolean
        default: false
      slack_channel:
        description: 'Slack channel'
        type: string
        required: false
        default: ''
      timetell_code:
        description: 'Timetell project id'
        type: number
      acceptance_pipeline:
        description: 'Acceptance pipeline'
        type: string
      production_pipeline:
        description: 'Production pipeline'
        type: string
      acceptance_urls:
        description: 'Acceptance urls'
        type: string
      production_urls:
        description: 'Production urls'
        type: string
      release_stop:
        description: 'Release stop'
        type: boolean
        default: false

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
    - name: Release stop
      if: ${{ inputs.release_stop }}
      run: |
        echo "A release stop has been implemented;"
        echo "To release, please change the variable 'release_stop' to 'false' in the workflow file"
        exit 1

    - name: Checkout and Login to GitHub Container Registry
      uses: amsterdam/github-workflows/ghcr-login@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update dependencies file
      run: make requirements

    - name: Check Major Upgrades
      shell: sh
      if: ${{ inputs.check_diff }}
      id: diff_checker
      run: |
        export DIFF=$(make diff)
        if [ -z "$DIFF" ]; then
          echo "No major upgrades found"
        else
          echo "Major upgrades found"
          echo "$DIFF"
          {
            echo 'DIFF<<EOF'
            echo "$DIFF"
            echo EOF
          } >> "$GITHUB_ENV"
        fi

    - name: Construct variables
      id: variables
      run: |
        today=$(date +'%Y-%m-%d')
        echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

        title="Maintenance run $today"
        title_html=$(echo $title | sed 's/ /%20/g')
        echo "title=$title" >> $GITHUB_OUTPUT
        echo "title_html=$title_html" >> $GITHUB_OUTPUT

        # Increment minor version of last tag. Use 1.0.0 if there is no latest_tag
        git fetch --tags
        latest_hash=$(git rev-list --tags --max-count=1)
        echo "latest_hash=$latest_hash" >> $GITHUB_OUTPUT
        if [ -n "$latest_hash" ]; then
          latest_tag=$(git describe --tags $latest_hash)
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
          next_tag=$(echo $latest_tag | awk -F. -v OFS=. '{$NF = $NF + 1;} 1')
        else
          echo "latest_tag=No tags found" >> $GITHUB_OUTPUT
          next_tag="1.0.0"
        fi
        echo "next_tag=$next_tag" >> $GITHUB_OUTPUT

        echo "release_url=${{ github.event.repository.html_url }}/releases/new?tag=$next_tag&title=$title_html" >> $GITHUB_OUTPUT

    - name: Print variables
      run: |
        echo "Today is ${{ steps.variables.outputs.today }}"
        echo "Title is ${{ steps.variables.outputs.title }}"
        echo "Latest tag hash is ${{ steps.variables.outputs.latest_hash }}"
        echo "Latest tag is ${{ steps.variables.outputs.latest_tag }}"
        echo "Next tag is ${{ steps.variables.outputs.next_tag }}"
        echo "Release url is ${{ steps.variables.outputs.release_url }}"

    - name: Generate app token
      id: generate_token
      uses: actions/create-github-app-token@v1
      with:
        app_id: ${{ secrets.DEPENDABOT_APP_ID }}
        private_key: ${{ secrets.DEPENDABOT_APP_PRIVATE_KEY }}

    - name: Create Pull Request
      id: cpr
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ steps.generate_token.outputs.token }}
        title: ${{ steps.variables.outputs.title }}
        labels: Vakgroep Software Ontwikkeling Dependabot
        body: |
          Auto generated PR to update dependencies.
          This PR is generated by the Vakgroep SO Dependabot
        branch: dependabot/latest
        committer: Vakgroep SO Dependabot <dependabot-vakgroep-so@amsterdam.nl>
        commit-message: ${{ steps.variables.outputs.title }}

    - name: Check if SLACK_TOKEN exists
      env:
        slack_token: ${{ secrets.DEPENDABOT_APP_SLACK_TOKEN }}
      if: ${{ env.slack_token == '' && inputs.slack_channel != '' }}
      run: |
        echo "The secret \"DEPENDABOT_APP_SLACK_TOKEN\" has not been created; please go to \"settings > secrets > actions\" to create it"
        exit 1

    - name: Write message to slack
      uses: amsterdam/github-workflows/slack-message@v1
      if: ${{ inputs.slack_channel != '' }}
      with:
        slack-token: ${{ secrets.DEPENDABOT_APP_SLACK_TOKEN }}
        slack-channel: ${{ inputs.slack_channel }}
        message: ${{ env.DIFF }}
        pull-request-url: ${{ steps.cpr.outputs.pull-request-url }}
        acceptance_pipeline: ${{ inputs.acceptance_pipeline }}
        production_pipeline: ${{ inputs.production_pipeline }}
        acceptance_urls: ${{ inputs.acceptance_urls }}
        production_urls: ${{ inputs.production_urls }}
        timetell_code: ${{ inputs.timetell_code }}
        release_url: ${{ steps.variables.outputs.release_url }}

    - name: Raise slack notification failure
      if: failure()
      uses: archive/github-actions-slack@master
      with:
        slack-function: send-message
        slack-bot-user-oauth-access-token: ${{ secrets.DEPENDABOT_APP_SLACK_TOKEN }}
        slack-channel: ${{ inputs.slack_channel }}
        slack-optional-username: ${{ github.event.repository.name }}
        slack-text: "Workflow failed! \nHere is the url: ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}"
